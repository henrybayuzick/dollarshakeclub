{
  "name": "grunt-ssh",
  "description": "SSH and SFTP tasks for Grunt",
  "version": "0.11.2",
  "homepage": "https://github.com/andrewrjones/grunt-ssh",
  "author": {
    "name": "Andrew Jones",
    "email": "andrew@arjones.co.uk",
    "url": "http://andrew-jones.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/andrewrjones/grunt-ssh.git"
  },
  "bugs": {
    "url": "https://github.com/andrewrjones/grunt-ssh/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/andrewrjones/grunt-ssh/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "engines": {
    "node": ">= 0.8.7"
  },
  "scripts": {
    "test": "grunt"
  },
  "dependencies": {
    "ssh2": ">=0.2.25",
    "async": "*",
    "progress": "~1.1.3"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-bump": "~0.0.2",
    "nodeunit": "~0.7.4",
    "grunt-contrib-nodeunit": "~0.2.2",
    "sinon": "~1.6.0",
    "grunt-beautify": "git+https://github.com/terryweiss/grunt-beautify.git#FixForGrunt040",
    "grunt-npm": "0.0.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "ssh",
    "scp",
    "sftp",
    "remote",
    "exec",
    "rexec"
  ],
  "contributors": [
    {
      "name": "Andrew Jones",
      "email": "andrew@arjones.co.uk"
    },
    {
      "name": "Marcin Szczepanski",
      "email": "marcins@webqem.com"
    },
    {
      "name": "David J. Bradshaw",
      "email": "dave@bradshaw.net"
    },
    {
      "name": "John Wright",
      "email": "johngeorge.wright@gmail.com"
    },
    {
      "name": "Mark Stosberg",
      "email": "mark@rideamigos.com"
    },
    {
      "name": "Anders Johnson",
      "email": "adjohnson916@gmail.com"
    },
    {
      "name": "Andrew Stewart",
      "email": "andy@rocketboots.com"
    },
    {
      "name": "owenmead",
      "email": "owenmead@gmail.com"
    },
    {
      "name": "Andy Royle",
      "email": "ajroyle@gmail.com"
    },
    {
      "name": "Andy Shinn",
      "email": "andys@andyshinn.as"
    },
    {
      "name": "Evan Stoner",
      "email": "evan.stoner@gmail.com"
    },
    {
      "name": "James Wyse",
      "email": "james@jameswyse.net"
    },
    {
      "name": "Jason Williams",
      "email": "jaswilli@gmail.com"
    },
    {
      "name": "Justin Kulesza",
      "email": "justin.kulesza@atomicobject.com"
    },
    {
      "name": "harriha",
      "email": "harri.halikka@gmail.com"
    },
    {
      "name": "jabes",
      "email": "bull.justin@gmail.com"
    },
    {
      "name": "Alexandre Richonnier",
      "email": "heralight+github@gmail.com"
    },
    {
      "name": "Brian White",
      "email": "mscdex@mscdex.net"
    }
  ],
  "readme": "# grunt-ssh\r\n\r\n[![Build Status](https://travis-ci.org/andrewrjones/grunt-ssh.png?branch=master)](https://travis-ci.org/andrewrjones/grunt-ssh)\r\n[![NPM version](https://badge.fury.io/js/grunt-ssh.png)](http://badge.fury.io/js/grunt-ssh)\r\n![Dependencies](https://david-dm.org/andrewrjones/grunt-ssh.png)\r\n\r\n> SSH and SFTP tasks for Grunt, using [a pure JS implementation of ssh2](https://github.com/mscdex/ssh2).\r\n\r\n## Overview\r\n\r\nThis plugin requires Grunt `~0.4.0`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-ssh --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-ssh');\r\n```\r\n\r\nThis library provides two Grunt tasks for ssh:\r\n\r\n* _sftp_\r\n* _sshexec_\r\n\r\n*This plugin was designed to work with Grunt 0.4.x. If you're still using grunt v0.3.x it's strongly recommended that [you upgrade](http://gruntjs.com/upgrading-from-0.3-to-0.4), but in case you can't please use [v0.1.0](https://github.com/andrewrjones/grunt-ssh/tree/v0.1.0).*\r\n\r\n## Synopsis\r\n\r\n```js\r\n// don't keep passwords in source control\r\nsecret: grunt.file.readJSON('secret.json'),\r\nsftp: {\r\n  test: {\r\n    files: {\r\n      \"./\": \"*json\"\r\n    },\r\n    options: {\r\n      path: '/tmp/',\r\n      host: '<%= secret.host %>',\r\n      username: '<%= secret.username %>',\r\n      password: '<%= secret.password %>',\r\n      showProgress: true\r\n    }\r\n  }\r\n},\r\nsshexec: {\r\n  test: {\r\n    command: 'uptime',\r\n    options: {\r\n      host: '<%= secret.host %>',\r\n      username: '<%= secret.username %>',\r\n      password: '<%= secret.password %>'\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAn example `secret.json` might look like:\r\n\r\n```js\r\n{\r\n    \"host\" : \"myhost\",\r\n    \"username\" : \"andrewrjones\",\r\n    \"password\" : \"**************\"\r\n}\r\n```\r\n\r\nOr, specifying SSH configurations for re-use, and referencing from tasks:\r\n\r\n```js\r\n// don't keep passwords in source control\r\nsshconfig: {\r\n  \"myhost\": grunt.file.readJSON('myhost.json')\r\n},\r\nsshexec: {\r\n  test: {\r\n    command: 'uptime',\r\n    options: {\r\n      config: 'myhost'\r\n    }\r\n  },\r\n  ls: {\r\n    command: 'ls -la',\r\n    options: {\r\n      config: 'myhost'\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nYou can also overwrite the `username`, `password`, `passphrase` or `config` at runtime as a command line option:\r\n\r\n```sh\r\n$ grunt sshexec:someTask --config myhost --username foo\r\n```\r\n\r\n## Description\r\n\r\n### sftp\r\n\r\nCopies one or more files to a remote server over ssh.\r\n\r\nInside your `grunt.js` file add a section named `sftp`.\r\n\r\n#### Parameters\r\n\r\n##### files ```object```\r\n\r\nThe files to copy. Should contain key:value pairs.\r\n\r\nIf you would like to upload multiple files, use an array. For example:\r\n\r\n```js\r\nfiles: {\r\n  \"./\": [\"<%= dirs.css %>style.css\",\"<%= dirs.css %>login.css\",\"<%= dirs.css %>print.css\"]\r\n},\r\n```\r\n\r\nThe following will __not__ work:\r\n\r\n```js\r\nfiles: {\r\n  \"./\": \"<%= dirs.css %>style.css\",\r\n  \"./\": \"<%= dirs.css %>login.css\",\r\n  \"./\": \"<%= dirs.css %>print.css\"\r\n},\r\n```\r\n\r\n##### options ```object```\r\n\r\n###### path ```string```\r\n\r\nThe path on the remote server. Defaults to home.\r\n\r\n###### minimatch ```object```\r\n\r\nOptions for [minimatch](https://github.com/isaacs/minimatch).\r\n\r\n###### username ```string```\r\n\r\nThe username to authenticate as on remote system.\r\n\r\n###### host ```string```\r\n\r\nThe remote host to copy to, set up in your `~/.ssh/config`.\r\n\r\n###### port ```number```\r\n\r\nThe remote port, optional, defaults to `22`.\r\n\r\n###### srcBasePath ```string```\r\n\r\nOptionally strip off an initial part of the file when performing the SFTP operation. This is a string operation, so trailing slashes are important.\r\n\r\nFor example:\r\n\r\n```js\r\n    /* [...] */\r\n    files: {\r\n      \"./\": \"dist/**\"\r\n    },\r\n    options: {\r\n      path: '/tmp/',\r\n      /* [...] */\r\n      srcBasePath: \"dist/\"\r\n```\r\n\r\nWould SFTP the files in dist directly into tmp (eg. ```dist/index.html``` ==> ```/tmp/index.html```)\r\n\r\n\r\n###### createDirectories ```boolean```\r\n\r\nOptionally check whether the directories files will be sftp'd to exist first. This can take a bit of extra time as directories need to be checked, so this option is disabled by default.\r\n\r\nSee also the ```directoryPermissions``` option.\r\n\r\n###### directoryPermissions ```number```\r\n\r\nThe permissions to apply to directories created with createDirectories.  The default is 0755.  JSHint will probably yell at you unless you set this using ```parseInt```:\r\n\r\n```js\r\ndirectoryPermissions: parseInt(755, 8)\r\n```\r\n\r\n###### showProgress ```boolean```\r\n\r\nShow a progress bar during the file transfer.  The default is ```false```.\r\n\r\n###### chunkSize ```integer```\r\n\r\nSize of each read in bytes (default: 32768)\r\n\r\n##### Connection options\r\n\r\nThere are three mutually exclusive sets of connection options. They are\r\n`privateKey` (with optional `passphrase`), `password`, and `agent`. If any of\r\nthese options are private, they will be tried exclusively, and other connection\r\noptions will be ignored. Each is described a bit more below.\r\n\r\n###### privateKey ```string```\r\n\r\nA string containing the contents of the private key to use to authenticate with the remote system, you can load this from a file using ```grunt.file.read```. Be careful you don't put this into source control unless you mean it!\r\n\r\nIf a privateKey and passphrase are required, they \r\n\r\n```js\r\noptions: {\r\n  privateKey: grunt.file.read(\"id_rsa\"),\r\n  passphrase: <%= secret.passphrase %>\r\n}\r\n```\r\n\r\n###### passphrase ```string```\r\n\r\nThe passphrase to use with the ```privateKey```. As per the ```privateKey```, do not expose this in your Gruntfile or anywhere that'll end up public unless you mean it, load it from an external file.\r\n\r\n###### password ```string```\r\n\r\nThe password to authenticate on remote system.\r\n\r\n###### agent ```string```\r\n\r\nPath to ssh-agent's UNIX socket for ssh-agent-based user authentication.\r\n\r\n```js\r\noptions: {\r\n         host: '<%= pkg.host %>',\r\n         port: '<%= pkg.port %>',\r\n         username: '<%= pkg.username %>',\r\n         agent: process.env.SSH_AUTH_SOCK\r\n}\r\n```\r\nIf you use ```jshint```, rember to add ```process: true``` in ```globals``` \r\n\r\n###### readyTimeout ```integer```\r\n\r\nHow often (in milliseconds) to wait for the SSH handshake to complete.\r\n\r\n### sshexec\r\n\r\nRuns a command over ssh.\r\n\r\n__NOTE:__ To see the output of your `sshexec` command locally, use the `--verbose` flag.\r\n\r\nInside your `grunt.js` file add a section named `sshexec`.\r\n\r\n#### Parameters\r\n\r\n##### command ```string``` or ```array```\r\n\r\nThe command or commands to run, if an array is supplied, all the commands are executed on the same connection.\r\n\r\n##### options ```object```\r\n\r\n###### username ```string```\r\n\r\nThe username to authenticate as on remote system.\r\n\r\n\r\n###### host ```string```\r\n\r\nThe remote host to copy to, set up in your `~/.ssh/config`.\r\n\r\n###### port ```number```\r\n\r\nThe remote port, optional, defaults to `22`.\r\n\r\n###### pty ```boolean/object```\r\n\r\nSet to true to allocate a pseudo-tty with defaults, or an object containing specific pseudo-tty settings (see '[Pseudo-TTY settings](https://github.com/mscdex/ssh2#pseudo-tty-settings)'). Setting up a pseudo-tty can be useful when working with remote processes that expect input from an actual terminal (e.g. sudo's password prompt).\r\n\r\n###### ignoreErrors ```boolean```\r\n\r\nDetermins if the task should stop or continue if any of the commands returns a code other than 0. Disabled by default.\r\n\r\n###### suppressRemoteErrors ```boolean```\r\n\r\nIf true only display remote error messages if Grunt is run with the --verbose flag.\r\n\r\n##### Connection options\r\n\r\nThere are three mutually exclusive sets of connection options. They are\r\n`privateKey` (with optional `passphrase`), `password`, and `agent`. If any of\r\nthese options are private, they will be tried exclusively, and other connection\r\noptions will be ignored. Each is described a bit more below.\r\n\r\n###### privateKey ```string```\r\n\r\nA string containing the contents of the private key to use to authenticate with the remote system, you can load this from a file using ```grunt.file.read```. Be careful you don't put this into source control unless you mean it!\r\n\r\n```js\r\noptions: {\r\n  privateKey: grunt.file.read(\"id_rsa\"),\r\n  passphrase: <%= secret.passphrase %>\r\n}\r\n```\r\n###### passphrase ```string```\r\n\r\nThe passphrase to use with the ```privateKey```. As per the ```privateKey```, do not expose this in your Gruntfile or anywhere that'll end up public unless you mean it, load it from an external file.\r\n\r\n###### password ```string```\r\n\r\nThe password to authenticate on remote system.\r\n\r\n###### agent ```string```\r\n\r\nPath to ssh-agent's UNIX socket for ssh-agent-based user authentication.\r\n\r\n```js\r\noptions: {\r\n         host: '<%= pkg.host %>',\r\n         port: '<%= pkg.port %>',\r\n         username: '<%= pkg.username %>',\r\n         agent: process.env.SSH_AUTH_SOCK\r\n}\r\n```\r\n\r\nIf you use ```jshint```, remember to add ```process: true``` in ```globals``` \r\n\r\n###### readyTimeout ```integer```\r\n\r\nHow often (in milliseconds) to wait for the SSH handshake to complete.\r\n\r\n## Links\r\n\r\n* [Grunt your deployments too - toptable Tech Blog](http://tech.toptable.co.uk/blog/2013/08/08/grunt-your-deployments-too/)\r\n* [Grunt Deployment over SSH with Git - Justin Klemm](http://justinklemm.com/grunt-js-deployment-ssh-git/)\r\n\r\n## Release History\r\n* 2014/06/04 - v0.11.2 - [#63:](https://github.com/andrewrjones/grunt-ssh/pull/63) `sftp` improvements [(Brian White](https://github.com/mscdex); [#64:](https://github.com/andrewrjones/grunt-ssh/pull/64) Changed error handling for SFTP [junglebarry](https://github.com/junglebarry)\r\n* 2014/03/21 - v0.11.1 - [#59:](https://github.com/andrewrjones/grunt-ssh/pull/59) Don't add '/' to empty path ([David J. Bradshaw](https://github.com/davidjbradshaw)).\r\n* 2014/03/15 - v0.11.0 - [#50:](https://github.com/andrewrjones/grunt-ssh/pull/50) Enable setting of `chunkSize` option ([Michael Lam](https://github.com/mlamz)); [#51:](https://github.com/andrewrjones/grunt-ssh/pull/51) Fix bad output on close ([Eric Kever](https://github.com/pinktrink)); [#56:](https://github.com/andrewrjones/grunt-ssh/pull/56) Add readyTimeout option for ssh2 connections ([calebTomlinson](https://github.com/calebTomlinson)).\r\n* 2014/01/16 - v0.10.0 - [#47:](https://github.com/andrewrjones/grunt-ssh/pull/47) Add an optional progress bar for sftp uploads ([Jason Williams](https://github.com/jaswilli)).\r\n* 2013/12/06 - v0.9.1 - [#44:](https://github.com/andrewrjones/grunt-ssh/issues/44) Improve doc for SSH connection options ([Mark Stosberg](https://github.com/markstos)); [#45:](https://github.com/andrewrjones/grunt-ssh/issues/45) Fix incorrect Connection parameter in `execCommand` ([jabes](https://github.com/jabes)).\r\n* 2013/12/06 - v0.9.0 - [#28:](https://github.com/andrewrjones/grunt-ssh/issues/28) Pseudo-TTY support; [#40:](https://github.com/andrewrjones/grunt-ssh/issues/40) Add trailing slash to path if needed; [#31:](https://github.com/andrewrjones/grunt-ssh/issues/31) Print debug messages from ssh2 when `--debug` option is passed; Use latest version of ssh2 (0.2.14).\r\n* 2013/11/17 - v0.8.0 - [#33:](https://github.com/andrewrjones/grunt-ssh/pull/33) File counter for `sftp` and `suppressRemoteErrors` option for `sshexec` ([David J. Bradshaw](https://github.com/davidjbradshaw)); [#34:](https://github.com/andrewrjones/grunt-ssh/pull/34) Use stat() instead of opendir() for checking existence of a dir ([Harri Hälikkä](https://github.com/harriha)); [#38:](https://github.com/andrewrjones/grunt-ssh/pull/34) Doc updates ([Alexandre Richonnier](https://github.com/heralight)).\r\n* 2013/10/17 - v0.7.0 - [#32:](https://github.com/andrewrjones/grunt-ssh/pull/32) Added command line options for username, password and passphrase ([David J. Bradshaw](https://github.com/davidjbradshaw)); Doc updates.\r\n* 2013/09/25 - v0.6.2 - Allow sftp task to use the shared sshconfig; Allow overriding sshconfig properties in the task config ([Andy Royle](https://github.com/andyroyle)). Document using the private key with `sshexec`.\r\n* 2013/07/25 - v0.6.2 - Fix error when no passphrase is provided ([James Wyse](https://github.com/jameswyse)).\r\n* 2013/07/21 - v0.6.1 - `trim` options that may be read from files; Allow `sshexec` to use ssh-agent-based user authentication ([Andy Shinn](https://github.com/andyshinn)).\r\n* 2013/06/26 - v0.6.0 - Ability to supply a path to ssh-agent's UNIX socket for ssh-agent-based user authentication ([Justin Kulesza](https://github.com/kuleszaj)).\r\n* 2013/06/25 - v0.5.1 - Fix `srcBasePath` ([owenmead](https://github.com/owenmead)).\r\n* 2013/06/02 - v0.5.0 - Add support for multiple comands ([Andrew Stewart](https://github.com/andysprout)).\r\n* 2013/05/11 - v0.4.0 - Support defining and referencing ssh configurations. ([Anders Johnson](http://andrz.me/)).\r\n* 2013/05/07 - v0.3.3 - Fix encoding issues. ([John Wright](https://github.com/johngeorgewright)).\r\n* 2013/05/07 - v0.3.2 - Fix race condition when uploading larger files. ([John Wright](https://github.com/johngeorgewright)).\r\n* 2013/03/25 - v0.3.1 - Fix race condition when uploading multiple files. ([John Wright](https://github.com/johngeorgewright)).\r\n* 2013/02/27 - v0.3.0 - Support private key based authentication; Allow sftp to make directories if they do not exist. ([marcins](https://github.com/marcins)).\r\n* 2013/02/26 - v0.2.1 - Add `srcBasePath` option to `sftp` ([marcins](https://github.com/marcins)).\r\n* 2013/02/20 - v0.2.0 - Update for grunt 0.4.x.\r\n* 2013/02/13 - v0.1.0 - Initial release with _sshexec_ and _sftp_ tasks.\r\n\r\n## License\r\nCopyright (c) 2013 [Andrew Jones](http://andrew-jones.com)\r\nLicensed under the MIT license.\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-ssh@0.11.2",
  "dist": {
    "shasum": "30ec29610e729cd39b222dd7b6bd1ae90993c983"
  },
  "_from": "grunt-ssh@",
  "_resolved": "https://registry.npmjs.org/grunt-ssh/-/grunt-ssh-0.11.2.tgz"
}
